<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.renfei.repository.LetsEncryptDOMapper">
  <resultMap id="BaseResultMap" type="net.renfei.repository.entity.LetsEncryptDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="apply_date" jdbcType="TIMESTAMP" property="applyDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="cert_name" jdbcType="VARCHAR" property="certName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="net.renfei.repository.entity.LetsEncryptDOWithBLOBs">
    <result column="cert" jdbcType="LONGVARCHAR" property="cert" />
    <result column="cert_key" jdbcType="LONGVARCHAR" property="certKey" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, apply_date, end_date, cert_name
  </sql>
  <sql id="Blob_Column_List">
    cert, cert_key
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="net.renfei.repository.entity.LetsEncryptDOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_lets_encrypt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.renfei.repository.entity.LetsEncryptDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_lets_encrypt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_lets_encrypt
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_lets_encrypt
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.renfei.repository.entity.LetsEncryptDOExample">
    delete from t_lets_encrypt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.renfei.repository.entity.LetsEncryptDOWithBLOBs">
    insert into t_lets_encrypt (id, apply_date, end_date, 
      cert_name, cert, cert_key
      )
    values (#{id,jdbcType=BIGINT}, #{applyDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, 
      #{certName,jdbcType=VARCHAR}, #{cert,jdbcType=LONGVARCHAR}, #{certKey,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.renfei.repository.entity.LetsEncryptDOWithBLOBs">
    insert into t_lets_encrypt
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="applyDate != null">
        apply_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="certName != null">
        cert_name,
      </if>
      <if test="cert != null">
        cert,
      </if>
      <if test="certKey != null">
        cert_key,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="applyDate != null">
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="certName != null">
        #{certName,jdbcType=VARCHAR},
      </if>
      <if test="cert != null">
        #{cert,jdbcType=LONGVARCHAR},
      </if>
      <if test="certKey != null">
        #{certKey,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.renfei.repository.entity.LetsEncryptDOExample" resultType="java.lang.Long">
    select count(*) from t_lets_encrypt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_lets_encrypt
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.applyDate != null">
        apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.certName != null">
        cert_name = #{record.certName,jdbcType=VARCHAR},
      </if>
      <if test="record.cert != null">
        cert = #{record.cert,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.certKey != null">
        cert_key = #{record.certKey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_lets_encrypt
    set id = #{record.id,jdbcType=BIGINT},
      apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      cert_name = #{record.certName,jdbcType=VARCHAR},
      cert = #{record.cert,jdbcType=LONGVARCHAR},
      cert_key = #{record.certKey,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_lets_encrypt
    set id = #{record.id,jdbcType=BIGINT},
      apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      cert_name = #{record.certName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.renfei.repository.entity.LetsEncryptDOWithBLOBs">
    update t_lets_encrypt
    <set>
      <if test="applyDate != null">
        apply_date = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="certName != null">
        cert_name = #{certName,jdbcType=VARCHAR},
      </if>
      <if test="cert != null">
        cert = #{cert,jdbcType=LONGVARCHAR},
      </if>
      <if test="certKey != null">
        cert_key = #{certKey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.renfei.repository.entity.LetsEncryptDOWithBLOBs">
    update t_lets_encrypt
    set apply_date = #{applyDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      cert_name = #{certName,jdbcType=VARCHAR},
      cert = #{cert,jdbcType=LONGVARCHAR},
      cert_key = #{certKey,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.renfei.repository.entity.LetsEncryptDO">
    update t_lets_encrypt
    set apply_date = #{applyDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      cert_name = #{certName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>